<template>
  <div>
    <!-- Upload file input and button -->
    <input type="file" ref="fileInput" @change="handleFileChange" />
    <button @click="uploadFile">上传音乐文件</button>

    <!-- Delete file input and button -->
    <div>
      <input type="text" v-model="fileNameToDelete" placeholder="Enter file name to delete" />
      <button @click="deleteFile">删除音乐文件</button>
    </div>


  </div> <!-- Display file name of uploaded file -->
  <div v-if="uploadedFileName">
    <p>音乐名: {{ uploadedFileName }}</p>
  </div>
</template>

<script setup lang="ts">
import {onMounted, ref} from 'vue';
import service from "@/api/request";
interface UserForm {
  username: string;
}
// Declare the type for the selected file, which can be either a File or null
const selectedFile = ref<File | null>(null);
const fileNameToDelete = ref<string>(''); // Declare a ref for the file name to delete
const uploadedFileName = ref<string | null>(null); // Store the name of the uploaded file
const user =ref<UserForm>()
const init=async () => {
  console.log("init");
  const res = await service.get('/getSession');
  console.log("session:",res)
  user.value=res.data;
  console.log("user:",user.value?.username)
}

// Handle file selection
const handleFileChange = (event: Event) => {
  const target = event.target as HTMLInputElement; // Type cast the event target
  if (target?.files?.[0]) {
    selectedFile.value = target.files[0];
    // Extract the file name and remove the .mp3 suffix
    uploadedFileName.value = selectedFile.value.name.replace(/\.mp3$/, '');
  }
};

// Upload file
const uploadFile = async (): Promise<void> => {
  if (!selectedFile.value) {
    alert('请先选择一个文件');
    return;
  }

  // Create FormData object
  const formData = new FormData();
  formData.append('file', selectedFile.value); // 'file' is the field name expected by the backend
  console.log(selectedFile.value.name);
  try {
    // Send POST request with the file using service
    const response = await service.post('upload/music', formData, {
      headers: {
        'Content-Type': 'multipart/form-data',
      },
    });

    // Handle successful upload
    console.log('文件上传成功', response.data);
    alert('上传成功');
  } catch (error) {
    // Handle upload error
    console.error('上传失败', error);
    alert('上传失败');
  }
};

// Delete file
const deleteFile = async (): Promise<void> => {
  if (!fileNameToDelete.value) {
    alert('请输入文件名');
    return;
  }

  try {
    // Send DELETE request to delete the file by its name
    const response = await service.delete(`upload/music/${fileNameToDelete.value}`);

    // Handle successful delete
    console.log('文件删除成功', response.data);
    alert('删除成功');
  } catch (error) {
    // Handle delete error
    console.error('删除失败', error);
    alert('删除失败');
  }
};
onMounted(
    ()=>{
      init()
    }
)
</script>
